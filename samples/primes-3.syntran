
{
	// Search for the first n primes
	let n = 200;

	// Pre-allocate a list of n primes
	let primes = [0: n];

	// Number of primes found so far
	let num_primes = 0;

	// Start at 2 because 1 is not prime by definition
	let i = 2;
	while num_primes < n
	{
		let is_composite = false;

		let j = 0;
		while j < num_primes and not is_composite
		{
			let divisor = primes[j];

			// Is i divisible by divisor?
			let divisible = divisor * (i / divisor) == i; // mod == 0
			is_composite = is_composite or divisible;

			j = j + 1;
		}

		if not is_composite
		{
			primes[num_primes] = i;
			num_primes = num_primes + 1;
		}
		i = i + 1;
	}

	// This is the final list of primes
	primes;

	//// Final result if you only want the last prime
	//primes[num_primes-1];
}

