{
	# can haz comments?
	"name": "CI",
	"on": [
		"push"
	],
	"jobs": {
		"test-os": {
			"name": "Test on ${{ matrix.os }}",
			"runs-on": "${{ matrix.os }}",
			"strategy": {
				"matrix": {
					"os": [
						"ubuntu-latest",
						"windows-latest",
						"macOS-latest"
					]
				}
			},
			"steps": [
				{
					"uses": "actions/checkout@v1"
				},
				{
					"uses": "fortran-lang/setup-fpm@v5",
					"with": {
						"github-token": "${{ secrets.GITHUB_TOKEN }}"
					}
				},
				{
					"if": "matrix.os == 'ubuntu-latest'",
					"name": "Set ubuntu PATH",
					"run": "echo \"$HOME/bin\" >> $GITHUB_PATH\n"
				},
				{
					"if": "matrix.os == 'ubuntu-latest'",
					"name": "Test fpm default",

					"env": {
						"FPM_FC": "gfortran-12"
					},
					"run": "fpm install --prefix='$HOME'\nwhich syntran\nchmod +x ./samples/shebang.syntran\n./samples/shebang.syntran\n#\n# No significant difference between release and (default) debug profile.\n# Maybe that will change after I copy the other half of AOC tests\n#fpm test test\n#fpm test long\nfpm test test --profile release\nfpm test long --profile release\n"
				},
				{
					"if": "matrix.os == 'ubuntu-latest'",
					"run": "sudo apt-get install gfortran\n"
				},
				{
					"if": "matrix.os == 'macOS-latest'",
					"run": "brew install gcc@12\nbrew reinstall gcc@12\n"
				},
				{
					"name": "Build",
					"run": "#export OMP_NUM_THREADS=1\nbash ./build.sh debug\n#ls -ltrh build/\n"
				},
				{
					"if": "matrix.os != 'windows-latest'",
					"name": "Test debug",
					"run": "./build/syntran < samples/arithmetic.syntran\n#./build/syntran < samples/bad-syntax.syntran\ntime ./build/test\n"
				},
				{
					"if": "matrix.os != 'windows-latest'",
					"name": "Test release",
					"run": "bash ./build.sh release\ntime ./build/test\n"
				}
			]
		},
		"test-gfortran": {
			"name": "Test with gfortran-${{ matrix.gfortran }}",
			"runs-on": "${{ matrix.os }}",
			"strategy": {
				"matrix": {
					"os": [
						"ubuntu-latest"
					],
					"gfortran": [
						10,
						11,
						12
					]
				}
			},
			"steps": [
				{
					"uses": "actions/checkout@v1"
				},
				{
					"uses": "fortran-lang/setup-fpm@v5",
					"with": {
						"github-token": "${{ secrets.GITHUB_TOKEN }}"
					}

				},
				{
					"if": "matrix.os == 'ubuntu-latest'",
					"name": "Test ubuntu gfortran-${{ matrix.gfortran }}",
					"env": {
						"FPM_FC": "gfortran-${{ matrix.gfortran }}"
					},
					"run": "#fpm test test --verbose --flag -Wno-tabs\n#fpm test long\nfpm test test --profile release --verbose --flag -Wno-tabs\nfpm test long --profile release --flag -Wno-tabs\n"
				}
			]
		},
		"test-compilers": {
			"name": "Test with ${{ matrix.toolchain.compiler }}-${{ matrix.toolchain.version }}",
			"runs-on": "${{ matrix.os }}",
			"strategy": {
				"matrix": {
					"os": [
						"ubuntu-latest"
					],
					"toolchain": [
						{
							"compiler": "intel",
							"version": "2023.2"
						},
						{
							"compiler": "intel",
							"version": "2023.1"
						},
						{
							"compiler": "intel-classic",
							"version": "2021.1"
						},
						{
							"compiler": "intel-classic",
							"version": "2021.10"
						}
					]
				}
			},
			"steps": [
				{
					"uses": "actions/checkout@v1"

				},
				{
					"uses": "fortran-lang/setup-fpm@v5",
					"with": {
						"github-token": "${{ secrets.GITHUB_TOKEN }}"
					}

				},
				{
					"uses": "fortran-lang/setup-fortran@v1",
					"id": "setup-fortran",
					"with": {
						"compiler": "${{ matrix.toolchain.compiler }}",
						"version": "${{ matrix.toolchain.version }}"
					}
				},
				{
					"if": "matrix.os == 'ubuntu-latest'",
					"name": "Test ${{ matrix.toolchain.compiler }} ${{ matrix.toolchain.version }}",
					"env": {
						"FPM_FC": "${{ env.FC }}"
					},
					"run": "fpm test test --verbose --flag \"-DSYNTRAN_INTEL -fpp\"\nfpm test long --verbose --flag \"-DSYNTRAN_INTEL -fpp\"\n"
				}
			]
		}
	}
}
