
name: CI

on: [push]

#defaults:
#  run:
#    shell: bash

jobs:

  test-os:

    name: Test on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:

      # Having multiple matrices (e.g. os *and* gfortran) will test every
      # possible combination of those two matrices!
      matrix:
        os: [ubuntu-latest, windows-latest, macOS-latest]
        #os: [ubuntu-latest, macOS-latest]
        #os: [ubuntu-latest, windows-latest]
        #os: [ubuntu-latest]
        #gfortran: [11, 12]

    steps:

    - uses: actions/checkout@v1
    - uses: fortran-lang/setup-fpm@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - if: matrix.os == 'ubuntu-latest'
      name: Set ubuntu PATH
      run: |
        echo "$HOME/bin" >> $GITHUB_PATH

    - if: matrix.os == 'ubuntu-latest'
      name: Test fpm default
      env:
        #FPM_FC: gfortran-${{ matrix.gfortran }}
        FPM_FC: gfortran-12
      run: |
        fpm install --prefix='$HOME'
        which syntran
        chmod +x ./samples/shebang.syntran
        ./samples/shebang.syntran
        #
        # No significant difference between release and (default) debug profile.
        # Maybe that will change after I copy the other half of AOC tests
        #fpm test test
        #fpm test long
        fpm test test --profile release
        fpm test long --profile release

    - if: matrix.os == 'ubuntu-latest'
      run: |
        sudo apt-get install gfortran

    - if: matrix.os == 'macOS-latest'
      run: |
        brew install gcc@12
        brew reinstall gcc@12

    #- name: Checkout submodules
    #  shell: bash
    #  run: |
    #    git submodule update --init --recursive || echo "ignoring submodule error"
    - name: Build
      run: |
        #export OMP_NUM_THREADS=1
        bash ./build.sh debug
        #ls -ltrh build/

    - if: matrix.os != 'windows-latest'
      name: Test debug
      run: |
        ./build/syntran < samples/arithmetic.syntran
        #./build/syntran < samples/bad-syntax.syntran
        time ./build/test

    - if: matrix.os != 'windows-latest'
      name: Test release
      run: |
        bash ./build.sh release
        time ./build/test

    #- if: matrix.os == 'windows-latest'
    #  shell: bash
    #  run: |
    #    which gfortran
    #    #where gfortran
    #    #set PATH
    #    #echo %PATH%
    #    echo "PATH = "
    #    echo $PATH
    #    echo "GITHUB_PATH = "
    #    echo $GITHUB_PATH
    #    #Get-Content samples/arithmetic.syntran | ./build/syntran
    #    ./build/test.exe

  test-gfortran:

    name: Test with gfortran-${{ matrix.gfortran }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        #os: [ubuntu-latest, windows-latest, macOS-latest]
        #os: [ubuntu-latest, macOS-latest]
        #os: [ubuntu-latest, windows-latest]
        os: [ubuntu-latest]
        #gfortran: [10, 11, 12, 13]  # TODO: gfort 13 has an issue
        gfortran: [9, 10, 11, 12]  # gfort <= 8 not available by default on github ci workers

    steps:

    - uses: actions/checkout@v1
    - uses: fortran-lang/setup-fpm@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - if: matrix.os == 'ubuntu-latest'
      name: Test ubuntu gfortran-${{ matrix.gfortran }}
      env:
        FPM_FC: gfortran-${{ matrix.gfortran }}
      run: |
        #fpm test test --verbose --flag -Wno-tabs
        #fpm test long
        fpm test test --profile release --verbose --flag -Wno-tabs
        fpm test long --profile release --flag -Wno-tabs

  test-compilers:

    name: Test with ${{ matrix.toolchain.compiler }}-${{ matrix.toolchain.version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        toolchain:
          - {compiler: intel, version: '2023.2'}
          - {compiler: intel, version: '2023.1'}
          - {compiler: intel, version: '2023.0'}
            #- {compiler: intel, version: '2022.2'}  # ifx 2022.2 doesn't have `do while ()` :(
          #- {compiler: intel, version: '2024.0'}
          - {compiler: intel-classic, version: '2021.1'}
          - {compiler: intel-classic, version: '2021.10'}
          #- {compiler: nvidia-hpc, version: '23.11'}  # TODO: might be worth a try

    steps:

    - uses: actions/checkout@v1
    - uses: fortran-lang/setup-fpm@v5
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - uses: fortran-lang/setup-fortran@v1
      id: setup-fortran
      with:
        compiler: ${{ matrix.toolchain.compiler }}
        version: ${{ matrix.toolchain.version }}

    - if: matrix.os == 'ubuntu-latest'
      name: Test ${{ matrix.toolchain.compiler }} ${{ matrix.toolchain.version }}
      env:
        #FPM_FC: ifx
        FPM_FC: ${{ env.FC }}
      run: |
        fpm test test --verbose --flag "-DSYNTRAN_INTEL -fpp"
        #fpm test long TODO flags

