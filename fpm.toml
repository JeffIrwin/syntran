
# Tested with fpm 0.9.0
#
# Drive fpm with commands like this:
#
#     fpm clean --all
#
#     # debug is the default
#     fpm build
#     fpm build --profile release
#     fpm build --verbose --flag -Wno-tabs
#
#     # `runner` is a prefix to the syntran cmd.  anything after `-- ` is a cmd
#     # arg passed after `syntran`, e.g. the syntran filename
#     fpm run
#     fpm run --runner rlwrap
#     fpm run -- samples/primes-3.syntran
#
#     fpm test
#
#     # install to ~/bin/
#     fpm install --prefix ~
#
# fpm is smart.  If you run `fpm install` or `fpm test` without building first,
# it will automatically build
#
# Binary installers for fpm are available, but I built it from source:
#
#     git clone https://github.com/fortran-lang/fpm
#     cd fpm/
#     ./install.sh -h
#     ./install.sh --prefix='$HOME'  # '~' doesn't work
#     which fpm
#     ls ~/bin/
#     fpm --version

name = "syntran"
license = "BSD 3-Clause"
author = "Jeff Irwin"

## TODO: best practices for duplicating version here and in src?
#version = "0.0.27"

## Am I prepared to dox myself?
#maintainer = "jane.doe@example.com"
#copyright = "Copyright 2021, Jane Doe"

description = "syntran is an array-oriented language with an interpreter written in Fortran"
categories = ["interpreter"]
homepage = "https://github.com/JeffIrwin/syntran"

# TODO: set compiler flags, like -Wno-tab, etc.  Probably best done in a build
# script which sets --flag (or FPM_FFLAGS env var, but that should probably be
# left to other users to override my --flag args)

[build]
auto-executables = true
auto-tests = true
auto-examples = true
module-naming = true

[install]
library = false

[[executable]]
name = "syntran"
source-dir = "src"
main = "main.f90"

[[test]]
name = "test"
source-dir = "src/tests/"
main = "test.f90"

